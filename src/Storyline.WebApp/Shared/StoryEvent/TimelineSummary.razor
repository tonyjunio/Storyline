@using Storyline.WebApp.Common;

@code {
    [Inject]
    protected IJSRuntime JS { get; set; }

    [Parameter]
    public IEnumerable<Models.Storyline.StoryEvent> StoryEvents { get; set; }

    [Parameter]
    public Models.Storyline.StoryEvent SelectedStoryEvent { get; set; } = null;

    [Parameter]
    public EventCallback<Models.Storyline.StoryEvent> OnStoryEventSelect { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        return base.OnAfterRenderAsync(firstRender);
    }

    protected int[] GetYears()
    {
        IEnumerable<int> startYears = this.StoryEvents.Select(x => x.EventTimeStart.Year);
        IEnumerable<int> endYears = this.StoryEvents.Where(x => x.EventTimeEnd.HasValue).Select(x => x.EventTimeEnd.Value.Year);

        return startYears.Concat(endYears).Distinct().OrderBy(x => x).ToArray();
    }

    protected void SelectStoryEvent(Models.Storyline.StoryEvent item)
    {
        this.SelectedStoryEvent = item;
        this.OnStoryEventSelect.InvokeAsync(item);
    }
}

@if (this.StoryEvents is not null)
{
    int[] years = this.GetYears();
    <div class="timeline-summary hide">
        <div class="ts-options">
            <i class="fa fa-x fa-lg" title="Close Timeline Section" onclick="ToggleTimelineSummaryView();"></i>
            <i class="fa fa-arrows-rotate fa-lg" title="Refresh Timeline" onclick="RenderTimelineSummary();"></i>
        </div>
        @foreach (int year in years)
        {
            Models.Storyline.StoryEvent[] events = this.StoryEvents.Where(x => x.EventTimeStart.Year == year).ToArray();
            <div class="timeline-period" data-year="@year">
                <div class="year">@year</div>
                <div class="events">
                    @foreach (var e in events)
                    {
                        int startYear = e.EventTimeStart.Year;
                        int endYear = e.EventTimeEnd?.Year ?? startYear;
                        string selectedItemClass = this.SelectedStoryEvent?.Id == e.Id ? "selected" : "";

                        <span class="event-item @selectedItemClass" data-start-year="@startYear" data-end-year="@endYear" data-event-id="@e.Id" data-event-title="@e.Title" title="@e.Title" @onclick="() => SelectStoryEvent(e)">@e.Title</span>
                    }
                </div>
            </div>
        }
    </div>
}

<style>

    .timeline-summary {
        align-content: start;
        background: #000000;
        border-bottom: 1px solid #323232;
        box-shadow: inset 0px -20px 50px -30px #545454;
        display: flex;
        flex-flow: row nowrap;
        height: 0px;
        overflow: hidden;
        width: 100%;
        z-index: 100;
    }

    .timeline-summary.hide {
        height: 0px !important;
    }

        .timeline-summary .ts-options {
            background-color: #181818;
            display: flex;
            flex-flow: column nowrap;
            justify-content: start;
            padding-top: 10px;
        }

        .timeline-summary .ts-options .fa {
            color: #9b8c58;
            cursor: pointer;
            line-height: 1.5rem;
            margin-bottom: 5px;
            padding: 3px 5px;
            text-align: center;
        }

        .timeline-summary .ts-options .fa:hover {
            color: #1c979e;
        }

        .timeline-summary .timeline-period {
            flex-grow: 1;
        }

            .timeline-summary .timeline-period:nth-child(2n+1) {
                background-color: #2d2d2d87;
            }

            .timeline-summary .timeline-period:nth-child(2n+2) {
                background-color: #2d2d2d5c;
            }

            .timeline-summary .timeline-period .year {
                color: #9b8c58;
                font-size: 0.9rem;
                font-weight: 400;
                padding: 10px;
                text-align: center;
            }

            .timeline-summary .timeline-period .events {
                position: relative;
            }

                .timeline-summary .timeline-period .events .event-item {
                    background-color: #313131;
                    border-radius: 2px;
                    color: #ffffff;
                    cursor: pointer;
                    display: inline-block;
                    font-size: 0.8rem;
                    overflow: hidden;
                    line-height: 1.2rem;
                    padding: 2px 5px;
                    position: absolute;
                    text-align: center;
                    text-overflow: ellipsis;
                    /*white-space: nowrap;*/
                }

                    .timeline-summary .timeline-period .events .event-item:hover {
                        background-color: #20acb4;
                    }

                    .timeline-summary .timeline-period .events .event-item.selected {
                        background-color: #9b8c58;
                    }
</style>